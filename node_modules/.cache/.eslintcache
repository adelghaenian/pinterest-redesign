[{"/home/adel/competitions/pinterest-style/src/index.js":"1","/home/adel/competitions/pinterest-style/src/App.js":"2","/home/adel/competitions/pinterest-style/src/reportWebVitals.js":"3","/home/adel/competitions/pinterest-style/src/components/Header.js":"4","/home/adel/competitions/pinterest-style/src/components/ViewMode.js":"5","/home/adel/competitions/pinterest-style/src/components/Loader.js":"6","/home/adel/competitions/pinterest-style/src/components/End.js":"7","/home/adel/competitions/pinterest-style/src/components/Content.js":"8","/home/adel/Documents/GitHub/pinterest-redesign/src/index.js":"9","/home/adel/Documents/GitHub/pinterest-redesign/src/reportWebVitals.js":"10","/home/adel/Documents/GitHub/pinterest-redesign/src/App.js":"11","/home/adel/Documents/GitHub/pinterest-redesign/src/components/Loader.js":"12","/home/adel/Documents/GitHub/pinterest-redesign/src/components/End.js":"13","/home/adel/Documents/GitHub/pinterest-redesign/src/components/Header.js":"14","/home/adel/Documents/GitHub/pinterest-redesign/src/components/Content.js":"15","/home/adel/Documents/GitHub/pinterest-redesign/src/components/ViewMode.js":"16"},{"size":535,"mtime":1650064479046,"results":"17","hashOfConfig":"18"},{"size":2312,"mtime":1650141444115,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1650069670619,"results":"20","hashOfConfig":"18"},{"size":1837,"mtime":1650137711229,"results":"21","hashOfConfig":"18"},{"size":972,"mtime":1650127611605,"results":"22","hashOfConfig":"18"},{"size":158,"mtime":1650136476200,"results":"23","hashOfConfig":"18"},{"size":182,"mtime":1650090705607,"results":"24","hashOfConfig":"18"},{"size":1332,"mtime":1650144091913,"results":"25","hashOfConfig":"18"},{"size":535,"mtime":1650064479046,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1650069670619,"results":"28","hashOfConfig":"27"},{"size":2312,"mtime":1650141444115,"results":"29","hashOfConfig":"27"},{"size":158,"mtime":1650136476200,"results":"30","hashOfConfig":"27"},{"size":182,"mtime":1650090705607,"results":"31","hashOfConfig":"27"},{"size":1837,"mtime":1650137711229,"results":"32","hashOfConfig":"27"},{"size":1332,"mtime":1650144091913,"results":"33","hashOfConfig":"27"},{"size":972,"mtime":1650127611605,"results":"34","hashOfConfig":"27"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"15ffqpq",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f0gn8t",{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},"/home/adel/competitions/pinterest-style/src/index.js",[],[],[],"/home/adel/competitions/pinterest-style/src/App.js",["88","89"],[],"/home/adel/competitions/pinterest-style/src/reportWebVitals.js",[],[],"/home/adel/competitions/pinterest-style/src/components/Header.js",["90"],[],"/home/adel/competitions/pinterest-style/src/components/ViewMode.js",["91"],[],"/home/adel/competitions/pinterest-style/src/components/Loader.js",[],[],"/home/adel/competitions/pinterest-style/src/components/End.js",[],[],"/home/adel/competitions/pinterest-style/src/components/Content.js",["92","93"],[],"import React from 'react'\n\nexport default function Content(props) {\n    if (props.viewMode === 0 || props.viewMode === 1) {\n        return (\n            <div className={`content-thumbnail-wrapper ${props.viewMode === 1 ? \"masnory-item\" : \"\"}`}>\n                <img className={`content-thumbnail ${props.viewMode === 0 ? \"fixed-size\" : \"\"} ${props.viewMode === 1 ? \"masnory-image\" : \"\"}`} src={props.image_url} />\n                <div className='content-thumbnail-overlay'></div>\n                <div className='content-thumbnail-info'>\n                    <h3 className='content-thumbnail-title'>{props.name}</h3>\n                </div>\n            </div>\n        )\n    }\n    else {\n        return (\n            <div className='content-detailed-wrapper'>\n                <img className='content-detailed-image' src={props.image_url} />\n                <div className='content-detailed-info'>\n                    <h3 className='content-detailed-title'>{props.name}</h3>\n\n                    <div className='content-detailed-description' dangerouslySetInnerHTML={{ __html: props.description }}></div>\n                </div>\n                <div className='content-description-overlay'>\n                    <div className='content-description-overlay-text'>Read More</div>\n                </div>\n            </div>\n        )\n\n    }\n}\n","/home/adel/Documents/GitHub/pinterest-redesign/src/index.js",[],[],"/home/adel/Documents/GitHub/pinterest-redesign/src/reportWebVitals.js",[],[],"/home/adel/Documents/GitHub/pinterest-redesign/src/App.js",["94","95"],[],"import './App.css';\nimport Header from './components/Header';\nimport { useState, useEffect } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport LoaderComponent from './components/Loader';\nimport EndComponent from './components/End';\nimport Content from './components/Content';\n\n\nfunction App() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [viewMode, setViewMode] = useState(0);\n  const [items, setItems] = useState([]);\n  const [result, setResult] = useState([]);\n  const [hasMore, sethasMore] = useState(true);\n  const [page, setpage] = useState(0);\n  const itemsPerPage = 60;\n\n  const getContent = async () => {\n    const res = await fetch(\n      'http://xoosha.com/ws/1/test.php?offset=' + itemsPerPage * page\n    );\n    const data = await res.json();\n    setItems([...items, ...data]);\n    setpage(page + 1);\n  }\n  useEffect(() => {\n    if (page === 0)\n      getContent();\n\n    (searchTerm !== \"\") ? setResult(items.filter(item => item.description.toLowerCase().includes(searchTerm.toLowerCase()))) : setResult([...items]);\n\n  }, [searchTerm, items]);\n\n\n  return (\n    <div className=\"App\">\n      <Header viewMode={viewMode} setViewMode={setViewMode} setSearchTerm={setSearchTerm} />\n      <div id=\"scrollableDiv\">\n        <InfiniteScroll\n          dataLength={items.length}\n          next={getContent}\n          scrollableTarget=\"scrollableDiv\"\n          hasMore={hasMore}\n          loader={<LoaderComponent />}\n          endMessage={<EndComponent />}\n          className=\"masnory-container\"\n        >\n          {viewMode === 0 &&\n            result.map((item) => {\n              return <Content viewMode={viewMode} key={item.page_id} image_url={item.image_url} name={item.name}></Content>\n            })\n          }\n          {viewMode === 1 &&\n            result.map((item) => {\n              return <Content viewMode={viewMode} key={item.page_id} image_url={item.image_url} name={item.name}></Content>\n            })\n          }\n          {viewMode === 2 &&\n            result.map((item) => {\n              return <Content viewMode={viewMode} key={item.page_id} image_url={item.image_url} name={item.name} description={item.description}></Content>\n            })\n          }\n        </InfiniteScroll>\n      </div>\n\n    </div >\n  );\n}\n\nexport default App;\n","/home/adel/Documents/GitHub/pinterest-redesign/src/components/Loader.js",[],[],"/home/adel/Documents/GitHub/pinterest-redesign/src/components/End.js",[],[],"/home/adel/Documents/GitHub/pinterest-redesign/src/components/Header.js",["96"],[],"import React from 'react'\nimport search from '../assets/search.svg'\nimport pinterest from '../assets/pinterest.svg'\n\nimport { TextField } from '@mui/material'\nimport { withStyles } from '@mui/styles'\nimport ViewMode from './ViewMode'\n\nconst primaryColor = '#D7143A'\nconst StyledTextField = withStyles({\n    root: {\n        '& label': {\n            color: '#ffffff70',\n            fontWeight: 'bold',\n            fontFamily: \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\",\n        },\n        '& label.Mui-focused': {\n            color: primaryColor,\n        },\n        '& .MuiInput-underline:after': {\n            borderBottomColor: primaryColor,\n        },\n        '& .MuiOutlinedInput-root': {\n            color: 'white',\n            paddingLeft: 10,\n            '& fieldset': {\n                borderRadius: '90px',\n                borderColor: 'transparent',\n                backgroundColor: '#ffffff10',\n            },\n            '&.Mui-focused fieldset': {\n                borderColor: primaryColor,\n            },\n        },\n    },\n})(TextField);\n\nexport default function Header(props) {\n    return (\n        <div className='Header'>\n            <img src={pinterest} alt=\"pinterest\" id='appicon' />\n            <div id=\"searchbar\" >\n                <StyledTextField id=\"searchbar\" label=\"Search\" variant=\"outlined\"\n                    style={{ width: '100%' }}\n                    InputProps={{\n                        endAdornment: <img src={search} style={{ width: \"18px\", marginRight: \"12px\" }} />,\n                    }}\n                    onChange={(e) => props.setSearchTerm(e.target.value)} />\n            </div>\n            < ViewMode viewMode={props.viewMode} setViewMode={props.setViewMode} />\n        </div>\n    )\n}\n","/home/adel/Documents/GitHub/pinterest-redesign/src/components/Content.js",["97","98"],[],"/home/adel/Documents/GitHub/pinterest-redesign/src/components/ViewMode.js",["99"],[],"import React from 'react'\nimport { ReactComponent as ViewThumbnailIcon } from '../assets/view_thumbnail.svg'\nimport { ReactComponent as ViewUnevenIcon } from '../assets/view_uneven.svg'\nimport { ReactComponent as ViewDetailedIcon } from '../assets/view_detailed.svg'\n\nimport { useState } from 'react'\n\nexport default function ViewMode(props) {\n    function handleClick(item) {\n        props.setViewMode(item)\n    }\n    return (\n        <div className='view-mode-container'>\n            <ViewThumbnailIcon className={`view-mode-item ${props.viewMode === 0 && 'view-mode-item-active'}`} onClick={() => { handleClick(0) }} />\n            <ViewUnevenIcon className={`view-mode-item ${props.viewMode === 1 && 'view-mode-item-active'}`} onClick={() => { handleClick(1) }} />\n            <ViewDetailedIcon className={`view-mode-item ${props.viewMode === 2 && 'view-mode-item-active'}`} onClick={() => { handleClick(2) }} style={{ marginRight: \"24px\" }} />\n        </div>\n    )\n}\n",{"ruleId":"100","severity":1,"message":"101","line":15,"column":19,"nodeType":"102","messageId":"103","endLine":15,"endColumn":29},{"ruleId":"104","severity":1,"message":"105","line":33,"column":6,"nodeType":"106","endLine":33,"endColumn":25,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":46,"column":39,"nodeType":"110","endLine":46,"endColumn":106},{"ruleId":"100","severity":1,"message":"111","line":6,"column":10,"nodeType":"102","messageId":"103","endLine":6,"endColumn":18},{"ruleId":"108","severity":1,"message":"109","line":7,"column":17,"nodeType":"110","endLine":7,"endColumn":169},{"ruleId":"108","severity":1,"message":"109","line":18,"column":17,"nodeType":"110","endLine":18,"endColumn":81},{"ruleId":"100","severity":1,"message":"101","line":15,"column":19,"nodeType":"102","messageId":"103","endLine":15,"endColumn":29},{"ruleId":"104","severity":1,"message":"105","line":33,"column":6,"nodeType":"106","endLine":33,"endColumn":25,"suggestions":"112"},{"ruleId":"108","severity":1,"message":"109","line":46,"column":39,"nodeType":"110","endLine":46,"endColumn":106},{"ruleId":"108","severity":1,"message":"109","line":7,"column":17,"nodeType":"110","endLine":7,"endColumn":169},{"ruleId":"108","severity":1,"message":"109","line":18,"column":17,"nodeType":"110","endLine":18,"endColumn":81},{"ruleId":"100","severity":1,"message":"111","line":6,"column":10,"nodeType":"102","messageId":"103","endLine":6,"endColumn":18},"no-unused-vars","'sethasMore' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getContent' and 'page'. Either include them or remove the dependency array.","ArrayExpression",["113"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.",["114"],{"desc":"115","fix":"116"},{"desc":"115","fix":"117"},"Update the dependencies array to be: [searchTerm, items, page, getContent]",{"range":"118","text":"119"},{"range":"120","text":"119"},[1083,1102],"[searchTerm, items, page, getContent]",[1083,1102]]