{"ast":null,"code":"var _jsxFileName = \"/home/adel/competitions/pinterest-style/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Header from './components/Header';\nimport { useState, useEffect } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport LoaderComponent from './components/Loader';\nimport EndComponent from './components/End';\nimport Conetent from './components/Content';\nimport Masonry from '@mui/lab/Masonry';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [viewMode, setViewMode] = useState(0);\n  const [items, setItems] = useState([]);\n  const [hasMore, sethasMore] = useState(true);\n  const [page, setpage] = useState(0);\n  const itemsPerPage = 60;\n\n  const getContent = async () => {\n    const res = await fetch('http://xoosha.com/ws/1/test.php?offset=' + itemsPerPage * page);\n    const data = await res.json();\n    setItems([...items, ...data]);\n    setpage(page + 1);\n  };\n\n  useEffect(() => {\n    getContent();\n    if (searchTerm !== \"\") setItems([...items.filter(item => item.name.toLowerCase().includes(searchTerm.toLowerCase()))]);\n  }, [searchTerm]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      viewMode: viewMode,\n      setViewMode: setViewMode,\n      setSearchTerm: setSearchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"scrollableDiv\",\n      children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n        dataLength: items.length,\n        next: getContent,\n        scrollableTarget: \"scrollableDiv\",\n        hasMore: hasMore,\n        loader: /*#__PURE__*/_jsxDEV(LoaderComponent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 19\n        }, this),\n        endMessage: /*#__PURE__*/_jsxDEV(EndComponent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 23\n        }, this),\n        className: \"masnory-container\",\n        children: [viewMode === 0 && items.map(item => {\n          return /*#__PURE__*/_jsxDEV(Conetent, {\n            viewMode: viewMode,\n            image_url: item.image_url,\n            name: item.name\n          }, item.page_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 22\n          }, this);\n        }), viewMode === 1 && items.map(item => {\n          return /*#__PURE__*/_jsxDEV(Conetent, {\n            viewMode: viewMode,\n            image_url: item.image_url,\n            name: item.name\n          }, item.page_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 22\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Uvc9wjQVCJ1JTWwOjeTpRo5ajrs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/adel/competitions/pinterest-style/src/App.js"],"names":["Header","useState","useEffect","InfiniteScroll","LoaderComponent","EndComponent","Conetent","Masonry","App","searchTerm","setSearchTerm","viewMode","setViewMode","items","setItems","hasMore","sethasMore","page","setpage","itemsPerPage","getContent","res","fetch","data","json","filter","item","name","toLowerCase","includes","length","map","image_url","page_id"],"mappings":"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","sourcesContent":["import './App.css';\nimport Header from './components/Header';\nimport { useState, useEffect } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport LoaderComponent from './components/Loader';\nimport EndComponent from './components/End';\nimport Conetent from './components/Content';\nimport Masonry from '@mui/lab/Masonry';\n\n\nfunction App() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [viewMode, setViewMode] = useState(0);\n  const [items, setItems] = useState([]);\n  const [hasMore, sethasMore] = useState(true);\n  const [page, setpage] = useState(0);\n  const itemsPerPage = 60;\n\n  const getContent = async () => {\n    const res = await fetch(\n      'http://xoosha.com/ws/1/test.php?offset=' + itemsPerPage * page\n    );\n    const data = await res.json();\n    setItems([...items, ...data]);\n    setpage(page + 1);\n  }\n  useEffect(() => {\n    getContent();\n    if (searchTerm !== \"\")\n      setItems([...items.filter(item => item.name.toLowerCase().includes(searchTerm.toLowerCase()))]);\n  }, [searchTerm]);\n\n  return (\n    <div className=\"App\">\n      <Header viewMode={viewMode} setViewMode={setViewMode} setSearchTerm={setSearchTerm} />\n      <div id=\"scrollableDiv\">\n        <InfiniteScroll\n          dataLength={items.length}\n          next={getContent}\n          scrollableTarget=\"scrollableDiv\"\n          hasMore={hasMore}\n          loader={<LoaderComponent />}\n          endMessage={<EndComponent />}\n          className=\"masnory-container\"\n        >\n          {viewMode === 0 &&\n            items.map((item) => {\n              return <Conetent viewMode={viewMode} key={item.page_id} image_url={item.image_url} name={item.name}></Conetent>\n            })\n          }\n          {viewMode === 1 &&\n            items.map((item) => {\n              return <Conetent viewMode={viewMode} key={item.page_id} image_url={item.image_url} name={item.name}></Conetent>\n            })\n          }\n        </InfiniteScroll>\n      </div>\n\n    </div >\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}